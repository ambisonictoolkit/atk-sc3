CLASS:: FoaTransform
summary:: First Order Ambisonic (FOA) transformer
categories:: Libraries>Ambisonic Toolkit>UGens>FOA>Transformer, UGens>Multichannel>Ambisonics
related:: Classes/FoaXform

DESCRIPTION::
Transforms (spatial domain filter) a First Order Ambisonic signal (B-format). link::Classes/FoaTransform:: provides continuously varying dynamic transforms at the audio and control rates, for static initial rate transforms see link::Classes/FoaXform::.



NOTE::
link::Classes/FoaTransform:: is a convenience wrapper around the various transformer UGens.
::


CLASSMETHODS::

METHOD:: ar

argument:: in
The input signal, an array: [in0, in1, ... inN]

argument:: kind
The kind of transform to apply.
anchor::transforms::


definitionList::
## code:: 'rtt'		rotAngle = 0, tilAngle = 0, tumAngle = 0, mul = 1, add = 0 :: || link::Classes/FoaRTT::
## code:: 'mirror'	theta = 0, phi = 0, mul = 1, add = 0 :: || link::Classes/FoaMirror::
## code:: 'directO'	angle = 0, mul = 1, add = 0 :: || link::Classes/FoaDirectO::
## code:: 'direct'	angle = 0, theta = 0, phi = 0, mul = 1, add = 0 :: || link::Classes/FoaDirect::
## code:: 'dominate'	gain = 0, theta = 0, phi = 0, mul = 1, add = 0 :: || link::Classes/FoaDominate::
## code:: 'zoom'		angle = 0, theta = 0, phi = 0, mul = 1, add = 0 :: || link::Classes/FoaZoom::
## code:: 'focus'	angle = 0, theta = 0, phi = 0, mul = 1, add = 0 :: || link::Classes/FoaFocus::
## code:: 'push'		angle = 0, theta = 0, phi = 0, mul = 1, add = 0 :: || link::Classes/FoaPush::
## code:: 'press'	angle = 0, theta = 0, phi = 0, mul = 1, add = 0 :: || link::Classes/FoaPress::
## code:: 'asymmetry'	angle = 0, mul = 1, add = 0 :: || link::Classes/FoaAsymmetry::
## code:: 'balance'	angle = 0, mul = 1, add = 0 :: || link::Classes/FoaBalance::
## code:: 'nfc'		distance = 1, mul = 1, add = 0 :: || link::Classes/FoaNFC::
## code:: 'proximity'	distance = 1, mul = 1, add = 0 :: || link::Classes/FoaProximity::
::


note:: strong:: Axial transforms - except as noted, all take args of angle = 0, mul = 1, add = 0 as defaults::

definitionList::
## code:: 'rotate' :: || link::Classes/FoaRotate::
## code:: 'tilt' :: || link::Classes/FoaTilt::
## code:: 'tumble' :: || link::Classes/FoaTumble::
## code:: 'directX' :: || link::Classes/FoaDirectX::
## code:: 'directY' :: || link::Classes/FoaDirectY::
## code:: 'directZ' :: || link::Classes/FoaDirectZ::
## code:: 'dominateX'	gain = 0, mul = 1, add = 0 :: || link::Classes/FoaDominateX::
## code:: 'dominateY'	gain = 0, mul = 1, add = 0 :: || link::Classes/FoaDominateY::
## code:: 'dominateZ'	gain = 0, mul = 1, add = 0 :: || link::Classes/FoaDominateZ::
## code:: 'zoomX' :: || link::Classes/FoaZoomX::
## code:: 'zoomY' :: || link::Classes/FoaZoomY::
## code:: 'zoomZ' :: || link::Classes/FoaZoomZ::
## code:: 'focusX' :: || link::Classes/FoaFocusX::
## code:: 'focusY' :: || link::Classes/FoaFocusY::
## code:: 'focusZ' :: || link::Classes/FoaFocusZ::
## code:: 'pushX' :: || link::Classes/FoaPushX::
## code:: 'pushY' :: || link::Classes/FoaPushY::
## code:: 'pushZ' :: || link::Classes/FoaPushZ::
## code:: 'pressX' :: || link::Classes/FoaPressX::
## code:: 'pressY' :: || link::Classes/FoaPressY::
## code:: 'pressZ' :: || link::Classes/FoaPressZ::
::

::


argument::  ... args
Arguments (listed above with each 'kind') for the wrapped transformer UGens. Arguments can NOT be passed in through keyword through the FoaTransform wrapper. You can pass values in by keyword if you use the transform UGens directly.



EXAMPLES::

link::Guides/Transforming-FOA::
